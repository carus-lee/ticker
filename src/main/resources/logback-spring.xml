<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scanPeriod="30 seconds">

    <!-- 로그 패턴에 색상 적용 %clr(pattern){color}
        https://logback.qos.ch/manual/layouts.html#coloring
    -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />

    <springProfile name="local"><property resource="application-local.yml" /></springProfile>
    <springProfile name="dev"><property resource="application-dev.yml" /></springProfile>
    <springProfile name="prd"><property resource="application-prd.yml" /></springProfile>

    <!-- 프로퍼티(로그위치, 패턴 등) -->
    <springProperty name="LOG_PATH" source="log.config.path" />
    <springProperty name="LOG_STD_FILE_NAME" source="log.config.filename.standard" />
    <springProperty name="LOG_ERROR_FILE_NAME" source="log.config.filename.error" />
    <springProperty name="LOG_MAX_HISTORY" source="log.config.maxHistory" />
    <springProperty name="LOG_TOTAL_SIZE_CAP" source="log.config.totalSizeCap" />

    <property name="CONSOLE_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative]  %clr(%-5level) %clr(${PID:-}){magenta} %clr(---){faint} %clr([%15.15thread]){faint} %clr(%-40.40logger{36}){cyan} %clr(:){faint} %msg%n"/>
    <property name="FILE_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative] %-5level ${PID:-} --- [%15.15thread] %-40.40logger{36} : %msg%n"/>

    <!-- 콘솔(STDOUT) -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 파일(STD_FILE) -->
    <appender name="STD_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <file>${LOG_PATH}/${LOG_STD_FILE_NAME}</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_STD_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>
    <!-- 파일(ERROR FILE) -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <file>${LOG_PATH}/${LOG_ERROR_FILE_NAME}</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_ERROR_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- ======================= -->
    <!-- spring profile별 로그 설정 -->
    <!-- ======================= -->
    <!-- LOCAL, DEV -->
    <springProfile name="local, dev">
        <root level="info"><appender-ref ref="STDOUT" /></root>
        <logger name="org">
            <appender-ref ref="STD_FILE" />
            <appender-ref ref="ERROR_FILE" />
        </logger>
        <logger name="com.digicaps.ticker">
            <appender-ref ref="STD_FILE" />
            <appender-ref ref="ERROR_FILE" />
        </logger>
    </springProfile>
    <!-- PRD -->
    <springProfile name="prd">
        <root level="info"><appender-ref ref="STDOUT" /></root>
        <logger name="org">
            <appender-ref ref="STD_FILE" />
            <appender-ref ref="ERROR_FILE" />
        </logger>
        <logger name="com.digicaps.ticker">
            <appender-ref ref="STD_FILE" />
            <appender-ref ref="ERROR_FILE" />
        </logger>
    </springProfile>

</configuration>